title: Protocol Selectbox
ns: json-editor
name: protocol
id: MyProtocol

Log(console/log)
ProtocolEl(dom/querySelector), CommandEl(dom/querySelector)
SelectProtocol(bootstrap/select), SelectCommand(bootstrap/select)
ClearCommands(dom/setHtml)

# TODO: relative paths should always work.
provider ./graph/{ns}/{name}.fbp as x

GraphCommands(x:models/model)
NetworkCommands(x:models/model)
RuntimeCommands(x:models/model)
ComponentCommands(x:models/model)

'#protocol' -> @selector ProtocolEl selection -> ^element SelectProtocol
'#command'  -> @selector CommandEl selection -> ^element SelectCommand
'Protocol'  -> @label SelectProtocol

'' -> @html ClearCommands
CommandEl selection -> ^element ClearCommands

[
  { "label": "Select..", "value": "clear" },
  { "label": "Graph", "value": "graph" },
  { "label": "Network", "value": "network" },
  { "label": "Runtime", "value": "runtime" },
  { "label": "Component", "value": "component" }
] -> @options SelectProtocol

'./protocol/all.json!' ~> in ProtocolSchemas(object/create)

'graph.input'       -> ^path GraphCommands
'component.input'   -> ^path ComponentCommands
'network.input'     -> ^path NetworkCommands
'runtime.input'     -> ^path RuntimeCommands

(
 return {
   label: val,
   value: val
 }
) -> @fn PrepareCommand(array/map)

SelectProtocol out [graph]     -> start GraphCommands
SelectProtocol out [component] -> start ComponentCommands
SelectProtocol out [network]   -> start NetworkCommands
SelectProtocol out [runtime]   -> start RuntimeCommands
SelectProtocol out [clear]     -> :start ClearCommands

GraphCommands options     -> options SelectCommand
NetworkCommands options   -> options SelectCommand
ComponentCommands options -> options SelectCommand
RuntimeCommands options   -> options SelectCommand

SelectCommand out -> msg Log
